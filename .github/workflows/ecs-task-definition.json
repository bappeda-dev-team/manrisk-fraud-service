    {
      "family": "manrisk-fraud-task",
      "containerDefinitions": [
        {
          "name": "manajemen-risiko-fraud",
          "image": "%s",
          "cpu": 512,
          "memory": 1024,
          "portMappings": [
            {
              "containerPort": 8080,
              "hostPort": 8080,
              "protocol": "tcp"
            }
          ],
          "essential": true,
          "environment": [
            {
              "name": "SPRING_DATASOURCE_URL",
              "value": "jdbc:postgresql://<ENDPOINT_RDS_ANDA>:5432/manajemen_risiko_fraud"
            },
            {
              "name": "SPRING_DATASOURCE_USERNAME",
              "value": "majapahit"
            },
            {
              "name": "SPRING_DATASOURCE_PASSWORD",
              "value": "Madiun@123"
            },
            {
              "name": "SPRING_DATA_REDIS_HOST",
              "value": "<ENDPOINT_REDIS_ANDA>"
            },
            {
              "name": "SPRING_DATA_REDIS_PORT",
              "value": "6379"
            }
          ]
        }
      ],
      "requiresCompatibilities": [
        "FARGATE"
      ],
      "networkMode": "awsvpc",
      "cpu": "512",
      "memory": "1024",
      "executionRoleArn": "<ARN_EXECUTION_ROLE_ANDA>"
    }
    ```
    > **Catatan**: Anda perlu mengisi `executionRoleArn` dari Task Definition yang sudah ada di AWS Console. Anda juga perlu mengganti endpoint RDS dan Redis di atas.

    *   Buat direktori `.github/workflows` di proyek Anda.
    *   Di dalamnya, buat file `deploy.yml`.

    <llm-snippet-file>.github/workflows/deploy.yml</llm-snippet-file>
    ```yaml
    name: Deploy to Amazon ECS

    on:
      push:
        branches:
          - main # Atau branch lain yang Anda inginkan

    jobs:
      deploy:
        name: Deploy
        runs-on: ubuntu-latest
        environment: production

        steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build, tag, and push image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $ECR_REGISTRY/${{ secrets.AWS_ECR_REPOSITORY_URI }}:$IMAGE_TAG .
            docker push $ECR_REGISTRY/${{ secrets.AWS_ECR_REPOSITORY_URI }}:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/${{ secrets.AWS_ECR_REPOSITORY_URI }}:$IMAGE_TAG"

        - name: Fill in the new image ID in the Amazon ECS task definition
          id: task-def
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: ${{ secrets.ECS_TASK_DEFINITION_FILE }}
            container-name: ${{ secrets.CONTAINER_NAME }}
            image: ${{ steps.build-image.outputs.image }}

        - name: Deploy Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: ${{ steps.task-def.outputs.task-definition }}
            service: ${{ secrets.ECS_SERVICE_NAME }}
            cluster: ${{ secrets.ECS_CLUSTER_NAME }}
            wait-for-service-stability: true
    ```

Sekarang, setiap kali Anda melakukan `git push` (atau merge) ke branch `main`, GitHub Actions akan otomatis:
1.  Membangun image Docker baru.
2.  Mengunggahnya ke ECR.
3.  Membuat revisi Task Definition baru dengan image tersebut.
4.  Men-deploy revisi tersebut ke ECS service Anda.

Selamat! Anda telah berhasil membangun infrastruktur modern yang scalable dan pipeline CI/CD yang sepenuhnya otomatis. Ini mungkin terlihat banyak, tetapi ini adalah fondasi yang sangat kuat untuk karir Anda.
